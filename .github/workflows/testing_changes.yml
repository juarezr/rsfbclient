# Based on:
#   - https://github.com/actions-rs/example/blob/master/.github/workflows/quickstart.yml
#
# Using:
#   - https://github.com/actions-rs/toolchain   -> https://github.com/marketplace/actions/rust-toolchain
#   - https://github.com/actions-rs/cargo       -> https://github.com/marketplace/actions/rust-cargo
#
# for simplicity we are checking compilation and testing everything on the Ubuntu environment only.
#
# TODO:
#   - Run in arm little-endian architecture

on: [push, pull_request]

name: testing_changes

jobs:
  linting:
    name: linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          default: true
          override: true
          components: rustfmt, clippy

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --verbose

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        continue-on-error: true # show all errors
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  testing:
    name: testing
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-20.04", "windows-latest" ]
        firebird: [v3, v2, v4]
        build: [linking, dynamic_loading]
        exclude:
          - os: "windows-latest" 
            firebird: v2
          - os: "windows-latest" 
            firebird: v4
        include:
          - os: "ubuntu-20.04"
            plataform: linux
          - os: "windows-latest"
            plataform: windows
          - firebird: v2
            image: "2.5-ss"
          - firebird: v3
            image: "3.0"
          - firebird: v4
            image: "4.0"
          - build: linking
            features: linking date_time pool
          - build: dynamic_loading
            features: dynamic_loading date_time pool
    runs-on: "${{ matrix.os }}"
    needs: linting
    steps:
      - name: Setup FirebirdSQL ${{ matrix.firebird }} with image  ${{ matrix.image }} on container
        if: matrix.plataform == 'linux'
        uses: juarezr/firebirdsql-github-action@v1.0.0
        with:
          version: "${{ matrix.image }}"
          firebird_database: "test.fdb"
          firebird_user: "test_user"
          firebird_password: "test_password"
          isc_password: "masterkey"

      - name: Setup FirebirdSQL ${{ matrix.firebird }} on  ${{ matrix.plataform }} on server
        if: matrix.plataform == 'windows'
        run: |
          choco install firebird -params '/SuperClassic'

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Create a alias to test.fdb on fb v2
        if: matrix.firebird == 'v2'
        run: |
          docker exec firebirdsql /bin/bash '/usr/local/firebird/bin/createAliasDB.sh' 'test.fdb' '/firebird/data/test.fdb'
          docker container restart firebirdsql
          echo '# Restarted container firebirdsql'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          default: true

      - name: Install cli and development library
        if: matrix.plataform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends firebird3.0-utils firebird-dev

      - name: Testing Connection and Query
        if: matrix.firebird != 'v4' && matrix.plataform == 'linux'
        run: |
          SQL1='select RDB$CHARACTER_SET_NAME as charset_sysdba from rdb$database;' 
          echo $SQL1 | isql-fb -bail -quiet -z -user SYSDBA -password masterkey 'localhost:/firebird/data/test.fdb'

      - name: Testing Connection for User test_user on fb v3
        if: matrix.firebird == 'v3' && matrix.plataform == 'linux'
        run: |
          SQL2='select RDB$CHARACTER_SET_NAME as charset_user from rdb$database;' 
          echo $SQL2 | isql-fb -bail -quiet -z -user test_user -password test_password 'localhost:test.fdb'

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features '${{ matrix.features }}' -- --test-threads 1
          # TODO: args: --features '${{ matrix.features }}'

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: "latest"
          run-types: "AllTargets"
          out-type: "Lcov"
          args: -v --line --count --branch --features '${{ matrix.features }}' -- --test-threads 1

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        env:
          COVERALLS_FLAG_NAME: run-${{ matrix.firebird }}-${{ matrix.build }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "./lcov.info"
          parallel: true
          # flag-name: run-${{ matrix.firebird }}-${{ matrix.build }}

      - name: Cleanup docker and coverage
        if: matrix.plataform == 'linux'
        run: |
          docker rm --volumes --force firebirdsql
          rm -f ./lcov.info

  coverage:
    name: coverage
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  embedded:
    name: embedded
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [linking, dynamic_loading]
        include:
        - build: linking
          features: linking date_time pool embedded
        - build: dynamic_loading
          features: dynamic_loading date_time pool embedded
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          default: true

      - name: Setup FirebirdSQL 3.0 for embedded tests
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends firebird3.0-utils firebird-dev firebird3.0-server-core

      - name: Create database for embedded tests
        run: |
          echo 'create database "/tmp/embedded_tests.fdb";' | isql-fb -bail -quiet -user SYSDBA

      - name: Run cargo embedded tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features '${{ matrix.features }}' -- --test-threads 1

  security:
    name: security
    needs: linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Run security audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

# end of file
